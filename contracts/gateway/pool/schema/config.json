{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Config",
  "type": "object",
  "required": [
    "finish_time",
    "open_claim",
    "open_deposit",
    "open_withdraw",
    "owner",
    "reward_rate",
    "reward_token",
    "share_token",
    "start_time"
  ],
  "properties": {
    "finish_time": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "open_claim": {
      "type": "boolean"
    },
    "open_deposit": {
      "type": "boolean"
    },
    "open_withdraw": {
      "type": "boolean"
    },
    "owner": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "reward_rate": {
      "$ref": "#/definitions/Decimal256"
    },
    "reward_token": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "share_token": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "start_time": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    }
  }
}
